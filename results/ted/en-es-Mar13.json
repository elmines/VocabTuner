{
    "x": [
        9560,
        20393
    ],
    "fun": 94.7763,
    "func_vals": [
        95.3652,
        95.0926,
        94.7763,
        95.5536,
        95.0911,
        94.898,
        95.7292,
        95.6005,
        96.0039,
        95.0556,
        95.1238,
        95.104,
        95.6359,
        95.8875,
        94.8414,
        95.504,
        95.5663,
        95.6511,
        95.7223,
        94.8414
    ],
    "x_iters": [
        [
            40379,
            47955
        ],
        [
            5188,
            51374
        ],
        [
            9560,
            20393
        ],
        [
            15708,
            34440
        ],
        [
            37883,
            43520
        ],
        [
            12685,
            26974
        ],
        [
            17957,
            11806
        ],
        [
            21640,
            46999
        ],
        [
            18514,
            22148
        ],
        [
            38028,
            40027
        ],
        [
            10103,
            34729
        ],
        [
            9824,
            17960
        ],
        [
            33379,
            6757
        ],
        [
            7686,
            278
        ],
        [
            9224,
            45154
        ],
        [
            9377,
            4162
        ],
        [
            6720,
            33473
        ],
        [
            9388,
            27888
        ],
        [
            10098,
            21378
        ],
        [
            12126,
            49581
        ]
    ],
    "models": [
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
        "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5) + WhiteKernel(noise_level=1),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)"
    ],
    "space": "Space([Integer(low=0, high=40493),\n       Integer(low=0, high=51423)])",
    "random_state": "<mtrand.RandomState object at 0x2b35b0d334c8>",
    "specs": {
        "args": {
            "n_jobs": 1,
            "kappa": 1.96,
            "xi": 0.01,
            "n_restarts_optimizer": 5,
            "n_points": 10000,
            "callback": null,
            "verbose": true,
            "random_state": "<mtrand.RandomState object at 0x2b35b0d334c8>",
            "y0": null,
            "x0": null,
            "acq_optimizer": "auto",
            "acq_func": "gp_hedge",
            "n_random_starts": 10,
            "n_calls": 20,
            "base_estimator": "GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,\n             kernel=1**2 * Matern(length_scale=[1, 1], nu=2.5),\n             n_restarts_optimizer=2, noise='gaussian', normalize_y=True,\n             optimizer='fmin_l_bfgs_b', random_state=1791095845)",
            "dimensions": "Space([Integer(low=0, high=40493),\n       Integer(low=0, high=51423)])",
            "func": "<bound method Experiment.__vocab_rating of <__main__.Experiment object at 0x2b35b0d2b7b8>>"
        },
        "function": "base_minimize"
    }
}